name: Update README with File Routes

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update README with Routes
        env:
          BASE_URL: "https://sttnf.github.io/pmweb"
        run: |
          # Initialize or read README
          if [ ! -f README.md ]; then
            cat > README.md << 'EOL'
          # Project Documentation

          Welcome to the project documentation. Below you'll find a list of all available pages.
          EOL
          fi

          # Generate new routes content
          {
            # Preserve existing content before routes section
            if grep -q "## üìÑ Available Routes" README.md; then
              sed '/## üìÑ Available Routes/,$d' README.md
            else
              cat README.md
            fi
            
            # Add routes header with timestamp
            echo -e "\n## üìÑ Available Routes\n"
            echo -e "*Last updated: $(date "+%Y-%m-%d %H:%M UTC")*\n"
            echo -e "Browse through our available pages:\n"

            # Track current folder for formatting
            current_folder=""
            
            # Process all HTML files
            find . -type f -name "*.html" ! -path "./README.md" | sort | while read -r file; do
              # Clean up path
              path=${file#./}
              path=${path%.html}
              folder=$(dirname "$path")
              basename=$(basename "$path")

              # Handle folder headers
              if [[ "$folder" != "." && "$folder" != "$current_folder" ]]; then
                # Add emoji based on folder name
                case "$folder" in
                  *blog*) emoji="üìù" ;;
                  *docs*) emoji="üìö" ;;
                  *pages*) emoji="üìÉ" ;;
                  *api*) emoji="üõ†Ô∏è" ;;
                  *) emoji="üìÅ" ;;
                esac
                echo -e "\n### ${emoji} ${folder}\n"
                current_folder="$folder"
              fi

              # Format route entry
              if [[ "$basename" == "index" ]]; then
                # Handle index files
                if [[ "$folder" == "." ]]; then
                  echo "- [üè† Homepage]($BASE_URL/)"
                else
                  echo "- [üìç ${folder}]($BASE_URL/$path)"
                fi
              else
                # Handle regular files
                # Capitalize first letter and replace hyphens with spaces
                display_name=$(echo "$basename" | sed 's/-/ /g' | awk '{for(i=1;i<=NF;i++)sub(/./,toupper(substr($i,1,1)),$i)}1')
                echo "- [üìÑ ${display_name}]($BASE_URL/$folder/$basename)"
              fi
            done

            # Add footer
            echo -e "\n---\n"
            echo "üí° *Routes are automatically updated when new pages are added.*"
          } > README.new

          # Update README if there are changes
          if ! cmp -s README.md README.new; then
            mv README.new README.md
            echo "should_commit=true" >> $GITHUB_ENV
          else
            rm README.new
            echo "should_commit=false" >> $GITHUB_ENV
          fi

      - name: Commit and Push changes
        if: env.should_commit == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "üìù Update available routes"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
